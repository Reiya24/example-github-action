name: Main

on:
  push:
    branches:
      - main
      - deploy-static/*

env:
  DOCKER_IMAGE: 'reiya24/${{ github.event.repository.name }}-${{ github.ref_name }}'

jobs:
  build-static:
    if: contains(github.ref, 'deploy-static/', )
    runs-on: ubuntu-latest
    steps:
      - uses: ahmadnassri/action-workflow-queue@v1 #If the same workflow is already running from a previous commit, wait for it to finish
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Inject .env
        uses: timheuer/base64-to-file@v1.2
        with:
          fileName: '.env'
          fileDir: '.'
          encodedString: ${{ secrets.ENV }}

      - name: Deploy docker-context
        run: |-
          npm install pnpm -g
          pnpm install
          pnpm run build

      - name: deploy to a server using rsync
        if: github.ref == 'refs/heads/deploy-static/rsync'
        uses: burnett01/rsync-deployments@6.0.0
        with:
          switches: -avzr --delete
          remote_host: ${{ secrets.SSH_HOST }}
          remote_user: ${{ secrets.SSH_USER }}
          remote_key: ${{ secrets.SSH_PRIVATE_KEY }}
          path: '.output/public/'
          remote_path: '/var/www/html/example-github-action'

      # - name: deploy to aws s3
      #   if: |
      #     contains(github.event.head_commit.message, 'build_console') ||
      #     (github.event.inputs.console == 'true')
      #   run: |
      #     aws s3 sync --delete ./console/.output/public/ s3:/${{ secrets.BUCKET_NAME }}
      #     aws cloudfront create-invalidation --distribution-id E1GY98BAN2E7HO --paths "/*"

# jobs:
#   build-container:
#     if: contains( ${{ env.CONTAINER_BRANCHES }}, github.ref_name)
#     runs-on: ubuntu-latest
#     steps:
#     - uses: ahmadnassri/action-workflow-queue@v1 #If the same workflow is already running from a previous commit, wait for it to finish
#     - uses: actions/checkout@v4
#       with:
#         fetch-depth: 0

#     - name: Secret Scanning
#       uses: trufflesecurity/trufflehog@main
#       with:
#         base: ""
#         head: ${{ github.ref_name }}
#         extra_args: --no-verification

#     - name: SonarCloud Scan
#       uses: sonarsource/sonarcloud-github-action@v3.1.0
#       with:
#         args: >
#           -Dsonar.qualitygate.wait=true
#           -Dsonar.projectKey=reiya_${{ github.event.repository.name }}
#           -Dsonar.projectName=${{ github.event.repository.name }}
#           -Dsonar.organization=reiya
#       env:
#         SONAR_TOKEN: ${{ secrets.SONARCLOUD_TOKEN }}

#     - name: Login to Docker Hub
#       uses: docker/login-action@v3
#       with:
#         username: reiya24
#         password: ${{ secrets.DOCKERHUB_TOKEN }}

#     - name: Inject .env
#       uses: timheuer/base64-to-file@v1.2
#       with:
#         fileName: '.env'
#         fileDir: '.'
#         encodedString: ${{ secrets.ENV }}

#     - name: Docker build
#       run: |-
#         docker build -t "$DOCKER_IMAGE":"$GITHUB_SHA" .

#     - name: push to container registry
#       run: |-
#         docker push "$DOCKER_IMAGE":"$GITHUB_SHA"

#     - name: Set up docker context over SSH authentication
#       uses: amirmarmul/docker-context-ssh-action@v1
#       with:
#         ssh-host: ${{ secrets.SSH_HOST }}
#         ssh-username: ${{ secrets.SSH_USER }}
#         ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
#         ssh-port: ${{ secrets.SSH_PORT }}
#         context-use: true

#     - name: Deploy docker-context
#       run: |-
#         docker ps
#         export IMAGE_TAG="$GITHUB_SHA"
#         export DOCKER_IMAGE="$DOCKER_IMAGE"
#         export REPOSITORY_NAME=${{ github.event.repository.name }}
#         docker compose -f deployment/docker-context/docker-compose.yaml up -d --force-recreate

#     - name: Check the deployed service URL
#       uses: jtalk/url-health-check-action@v4
#       with:
#         url: https://example.com|http://example.com
#         max-attempts: 10 
#         retry-delay: 10s 